name: Build docs (HTML + PDF + single MD)

on:
  pull_request:
  push:
    branches:
      - master
      - 'release/*'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  EM_VERSION: 2.0.4
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ${{ env.pythonLocation }}/bin/*
            ${{ env.pythonLocation }}/include
            ${{ env.pythonLocation }}/lib/python*/site-packages/*
            !${{ env.pythonLocation }}/bin/pip*
            !${{ env.pythonLocation }}/lib/python*/site-packages/pip*
            !${{ env.pythonLocation }}/lib/python*/site-packages/setuptools*
          key: ${{ env.pythonLocation }}-${{ hashFiles('docs/requirements.txt') }}

      - name: Install Doxygen, LaTeX and Pandoc dependencies
        run: |
          sudo apt-get update
          # doxygen + LaTeX (xetex) + pandoc + latexmk + make
          sudo apt-get install -y doxygen texlive-xetex texlive-binaries texlive-lang-english latexmk fonts-freefont-otf make pandoc

      - name: Install requirements
        run: |
          pip install -r docs/requirements.txt

      - name: Setup Emscripten cache
        id: cache-system-libraries
        uses: actions/cache@v4
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}

      - uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1

      - name: Build examples (with cache)
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            REPO_URL="${{ github.event.pull_request.head.repo.clone_url }}"
            COMMIT_REF="${{ github.event.pull_request.head.sha }}"
          else
            REPO_URL="${{ github.server_url }}/${{ github.repository }}"
            COMMIT_REF="${{ github.sha }}"
          fi
          ./scripts/build_html_examples.sh "$REPO_URL" "$COMMIT_REF"

      - name: Build docs (HTML)
        run: docs/build.py html

      - name: Remove .doctrees
        run: rm -rf docs/build/html/.doctrees

      - name: Retrieve version
        id: version
        run: |
          echo "VERSION_NAME=$(scripts/find_version.sh)" >> $GITHUB_OUTPUT

      # --- New: Build single HTML (singlehtml) and convert to a single Markdown file ---
      - name: Build single HTML (singlehtml)
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/release/'))) }}
        working-directory: docs
        run: |
          set -euo pipefail
          # Create a single HTML file containing the whole site
          sphinx-build -b singlehtml . _build/singlehtml
          echo "Single HTML built to docs/_build/singlehtml"

      - name: Convert single HTML to single Markdown (pandoc)
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/release/'))) }}
        working-directory: docs
        run: |
          set -euo pipefail
          HTML_FILE=_build/singlehtml/index.html
          MD_OUT=_build/single-md/merged.md
          mkdir -p $(dirname "$MD_OUT")
          if [ ! -f "$HTML_FILE" ]; then
            echo "Error: $HTML_FILE not found. Aborting single-md conversion."
            ls -la _build || true
            exit 1
          fi
          # Convert single HTML to GitHub-flavored Markdown. Adjust pandoc flags as needed.
          pandoc -f html -t gfm --wrap=none -o "$MD_OUT" "$HTML_FILE"
          echo "Generated merged markdown at docs/$MD_OUT"
          # show small preview
          head -n 80 "$MD_OUT" || true

      - name: Upload merged MD artifact
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/release/'))) }}
        uses: actions/upload-artifact@v4
        with:
          name: lvgl-docs-merged-md-${{ steps.version.outputs.VERSION_NAME || github.sha }}
          path: docs/_build/single-md/merged.md
          if-no-files-found: warn

      # --- Build PDF: run only on push to master/release/* or manual dispatch ---
      - name: Build PDF (Sphinx -> LaTeX -> PDF)
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/release/'))) }}
        working-directory: docs
        run: |
          set -euo pipefail
          if [ -f Makefile ]; then
            make latexpdf
          else
            sphinx-build -b latex . _build/latex
            ls -la _build/latex
            TEXFILE=$(ls _build/latex/*.tex | head -n 1)
            if [ -z "$TEXFILE" ]; then
              echo "No .tex files found in docs/_build/latex. PDF build cannot continue."
              exit 1
            fi
            latexmk -pdf -silent -cd "$TEXFILE"
          fi

      - name: Upload docs PDF artifact
        if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/release/'))) }}
        uses: actions/upload-artifact@v4
        with:
          name: lvgl-docs-pdf-${{ steps.version.outputs.VERSION_NAME || github.sha }}
          path: |
            docs/_build/latex/*.pdf
          if-no-files-found: warn

      - name: Deploy to subfolder
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@v4.7.3
        with:
          token: ${{ secrets.LVGL_BOT_TOKEN }}
          repository-name: lvgl/docs
          branch: gh-pages
          folder: docs/build/html
          target-folder: ${{ steps.version.outputs.VERSION_NAME }}
          git-config-name: lvgl-bot
          git-config-email: lvgl-bot@users.noreply.github.com
          single-commit: true

      - name: Deploy to master
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@v4.7.3
        with:
          token: ${{ secrets.LVGL_BOT_TOKEN }}
          repository-name: lvgl/docs
          branch: gh-pages
          folder: docs/build/html
          target-folder: master
          git-config-name: lvgl-bot
          git-config-email: lvgl-bot@users.noreply.github.com
          commit: true